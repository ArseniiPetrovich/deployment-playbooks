---
- name: Create directory parity_data/keys/OraclesPoA
  file:
    path: "{{ home }}/parity_data/keys/OraclesPoA"
    state: directory
    mode: 0700
    owner: "{{ username }}"
    group: "{{ username }}"

- name: Create logs directories
  file:
    path: "/{{ home }}/logs/old"
    state: directory
    mode: 0755
    owner: "{{ username }}"
    group: "{{ username }}"

- name: Download spec.json
  get_url: url={{ item }} dest={{ home }}/ mode=0644
  with_items:
    - "https://raw.githubusercontent.com/oraclesorg/oracles-scripts/sokol/spec.json"
    - "https://raw.githubusercontent.com/oraclesorg/deployment-azure/dev-mainnet/nodes/bootnodes.txt"
    - "https://raw.githubusercontent.com/oraclesorg/deployment-azure/dev-mainnet/nodes/mining-node/node.toml"

- name: Change nat in node.toml
  lineinfile: 
    path: "{{ home }}/node.toml"
    insertafter: '^\[network\]'
    line: nat="extip:{{ ansible_host }}"
    state: present

- name: Change reserved_peers in node.toml
  lineinfile: 
    path: "{{ home }}/node.toml"
    insertafter: '^\[network\]'
    line: reserved_peers="{{ home }}/bootnodes.txt"
    state: present

- name: Add log file in node.toml
  blockinfile: 
    path: "{{ home }}/node.toml"
    block: |
      [misc]
      log_file = "{{ home }}/logs/parity.log"
      [account]
      password = ["{{ NODE_PWD }}"]
      unlock = ["{{ MINING_ADDRESS }}"]
      [mining]
      force_sealing = true
      engine_signer = "{{ MINING_ADDRESS }}"
      tx_gas_limit = "{{ TX_GAS_LIMIT }}"
      reseal_on_txs = "none"

- name: Install {{ NODE_PWD }} file
  template: src=node_pwd.j2 dest={{ home }}/{{ NODE_PWD }} owner={{ username }} group={{ username }} mode=0600

- name: Config MINING_KEYFILE file
  shell: "echo '{{ MINING_KEYFILE }}' > {{ home }}/parity_data/keys/OraclesPoA/mining.key.{{ MINING_ADDRESS }}"

- file: path={{ home }} owner={{ username }} group={{ username }} recurse=yes

- git: repo=https://github.com/oraclesorg/oracles-scripts.git dest={{ home }}/oracles-scripts

- file: src="{{ home }}/node.toml" dest="{{ home }}/oracles-scripts/node.toml" owner="{{ username }}" group="{{ username }}" state=link

- name: install npm scripts
  shell: "cd {{ home }}/oracles-scripts/scripts; /usr/bin/npm install"
  become: true
  become_user: "{{ username }}"
  notify:
    - restart oracles-netstats

- name: Install Payout task.
  template: src=transferRewardToPayoutKey.j2 dest=/etc/cron.hourly/transferRewardToPayoutKey owner=root group=root mode=0755
